#Container Setup with NodeJS as the webserver running the application, PostgreSQL as the database instance and pgAdmin as the database manager GUI
services:
  server:
    image: node-server:1.0.0
    container_name: ${SERVER_HOST}
    build:
        context: ./server
        dockerfile: Dockerfile
    env_file: .env
    ports:
        - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - ./server:/server
      - server-node-modules:/server/node_modules
    depends_on:
      database:
        condition: service_healthy

  database:
    image: database:1.0.0
    container_name: ${POSTGRES_HOST}
    build:
        context: ./db
        dockerfile: Dockerfile
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - database-postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      start_period: 0s
      interval: 1s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin


volumes:
  server-node-modules:
    name: "server-node-modules"
  database-postgres:
    name: "database-postgres-data"
  pgadmin-data:
    name: "pgadmin-data"
